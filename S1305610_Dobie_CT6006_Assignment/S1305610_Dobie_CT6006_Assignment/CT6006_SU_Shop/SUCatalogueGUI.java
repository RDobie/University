/**
 * Below, the necessary files are being imported.
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Iterator;

/**
 * This class is used to created the GUI (graphical user interface) element of my system,
 * this displays the option/text boxes/labels etc needed for the user to understand how to operate
 * it with no explanation.
 * @author (Richard Dobie) 
 * @version (Version 1 17/05/16)
 */

public class SUCatalogueGUI {
    
    /**
     * code generated by simple GUI extension for BlueJ
     * This constructor sets up the GUI interface
     */
    public static void main(String[] args) {
        
        /**
         * This simply sets the title of the system when it has been run 
         */
        JFrame frame = new JFrame("UOG SU Catelougue");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        /**
         * Below sets the size of the frame when it opens
         */
        frame.setSize(600, 800);
        /**
         * The grid layout effects how and where the elements of the GUI is displayed
         */
        frame.setLayout(new GridLayout(4,1));

        JPanel pnlCustomerOrd = new JPanel();
        JLabel lblCustOrder= new JLabel("<html><h2><u>University Of Gloucestershire SU</u></h2><html>");
        pnlCustomerOrd.add(lblCustOrder);
        
        /**
         * This section of the class is used to add text boxes for the min and max
         * price, giving the user somewhere to inout their request. Labels are used to 
         * be displayed next to the text fields to highlight which box does what.
         */
        JPanel pnlMaxMinPrice = new JPanel();
        JLabel lblMinPrice= new JLabel("Minimum Product Price");
        JTextField txtMinPrice =  new JTextField(5);
        JLabel lblMaxPrice= new JLabel("Maximum Product Price");
        JTextField txtMaxPrice =  new JTextField(5);
        pnlMaxMinPrice.add(lblMinPrice);
        pnlMaxMinPrice.add(txtMinPrice);
        pnlMaxMinPrice.add(lblMaxPrice);
        pnlMaxMinPrice.add(txtMaxPrice);
        
        
        /**
         * The section of the class below contains the code for the drop-down
         * menu, this menu allows the user to select between the different
         * product types/choices.
         */
        JPanel pnlProductType = new JPanel();
        JLabel lblProductType = new JLabel("Select a Product Type and Click OK");
        String[] choices = { "Please Select","HOODIE","TSHIRT", "MUG","SCARF","SHORTS", "HAT"};
        final JComboBox<String> cbProductType = new JComboBox<String>(choices);
        JButton btnOK = new JButton("OK");
        pnlProductType.add(lblProductType);
        pnlProductType.add(cbProductType);
        pnlProductType.add(btnOK);

        JPanel pnlSearchResult = new JPanel();
        JLabel lblSearchResult = new JLabel("<html>Search Results Will Display Here</html>");
        lblSearchResult.setMaximumSize(new Dimension(400, 450));
        pnlSearchResult.add(lblSearchResult);
        
        /**
         * This code is used to display the relevant results underneath the choices, 
         * once the user has selected a min and max price range and what product type, 
         * this section of code tells the system to display the results once the 'OK'   
         * button has been pressed.
         */
        btnOK.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    ProductList lst  = new ProductList();
                    ArrayList<Product> result = lst.search(Double.parseDouble(txtMaxPrice.getText()), Double.parseDouble(txtMinPrice.getText()), cbProductType.getSelectedItem().toString());
                    
                    lblSearchResult.setText(showResult(result));
                }
        });

        /**
         * This code is simply used to add the different panels and make them
         * visible to the user.
         */
        frame.add(pnlCustomerOrd);

        frame.add(pnlMaxMinPrice);
        frame.add(pnlProductType);
        frame.add(pnlSearchResult);
        frame.setVisible(true);

    }
    
    /**
     * Below is the iterator that works with the algorithm to display the correct results
     */
    public static String showResult(ArrayList<Product> result) {
        //System.out.println(result.size());
        if(result.size() == 0) return "No results found. please try another search";
        Iterator iterator = result.iterator();
        String s = "";
        while (iterator.hasNext()) {
            Product p = (Product)iterator.next();
            s = s + p.toString();
        }
        
        return s;
    }
}

  